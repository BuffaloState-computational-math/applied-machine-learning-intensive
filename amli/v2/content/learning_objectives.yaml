prerequesites:
 - creates a Google account
 - modifies markdown cell in colab
 - modifies code cell in colab
 - executes code cell in colab
 - executes multiple code cells in colab
 - shares a colab notebook
 - collaborates inside a colab notebook
 - copies a colab notebook
 - enables GPU usage in colab
 - creates a Github presence
 - saves colab to Github
 - edits colab from Github
 - executes a colab notebook in a local Jupyter runtime
 - performs matrix addition
 - performs matrix subtraction
 - performs matrix multiplication
 - performs matrix division
 - reasons about basic probability

framing:
 - identifies regression problems
 - identifies binary classifciation problems
 - identifies multiclass classification problems
 - uses machine learning when appropriate
 - identifies data sources
 - identifies sources of bias within the dataset
 - identifies sources of bias in the data collection
 - identifies bias mitigation strategies
 - creates model retraining schedule
 - creates success criteria for model
 - identifies supervised learning problems
 - identifies unsupervised learning problems

data:
 - loads dataset from disk
 - loads dataset from internet
 - creates Kaggle presence
 - loads dataset from Kaggle API
 - gathers dataset statistics
 - visualizes data with scatterplot
 - visualizes data with heatmap
 - visualizes data with histogram
 - visualizes data on a map
 - visualizes data with boxplot
 - finds outliers in data
 - handles outliers in data
 - finds missing data
 - handles missing data
 - normalizes data
 - standardizes data
 - differientiates normalization and standardization
 - one-hot encodes catagorical data
 - serially encodes catagorical data
 - extracts data from compressed format
 - joins two datasets
 - saves data to disk
 - shuffles a dataset
 - samples a dataset
 - splits data into testing and training sets
 - splits data into validation, testing, and training sets
 - iterates data using k-folds
 - combines multiple columns into a new column
 - performs principle component analysis
 
regression:
 - creates regression model using closed form
 - creates regression model using batches
 - creates regression model using mini batching
 - creates regression model using sampling
 - creates regression model using multiple features
 - visualizes single-feature regression
 - visualizes two-feature regression
 - uses mean absolute error to train a regression
 - uses mean squared error to train a regression
 - uses root mean squared error to understand loss
 - identifies when to use mean squared error versus mean absolute error
 - determines if a regression model generalizes well
 - adjusts hyperparameters for regression model
 - visualizes a predicted vs. actual plot of regression performance
 - interprets a predicted vs. actual plot of regression performance
 - visualizes a residual plot of regression performance
 - interprets a residual plot of regression performance
 - performs regression using a perceptron

binary classification:
 - performs binary classification using logistic regression
 - visualizes logistic regression binary classification
 - performs binary classification using support vector machines
 - applies kernel hack to improve svm performance
 - visualizes support vector machine binary classification
 - performs binary classification using a deep neural network
 - creates a confusion matrix for binary classification
 - optimizes binary classification model for accuracy
 - optimizes binary classification model for precision
 - optimizes binary classification model for recall
 - optimizes binary classification model for F1
 - adjusts hyperparameters for binary classification model
 - reasons about optimization target for various binary classification scenarios
 - determines if a binary classification model generalizes well
 - visualizes a calibration plot of binary classification performance
 - interprets a calibration plot of binary classification performance
 - visualizes a ROC curve for binary classification performance
 - interpret ROC curve for binary classification
 - performs binary classification on image data
 - performs binary classification on tabular data
 - performs binary classification using a perceptron
 - performs binary classification using a convolutional neural network
 - calculates number of convolutions per image in a cnn given window, step, and input size
 - adjusts convolutional neural network hyperparamters
 - modifies image size
 - modifies image orientation
 - crops image
 - finds edges on image
 - create bayesian model for binary classification
 - visulalize binary classification features using a correlation matrix
 
multiclass classification:
 - performs multiclass classification using support vector machines
 - reasons about "one versus one" and "one versus all" classification strategies
 - creates a confusion matrix for muiticlass classification
 - optimizes multiclass classification model using micro strategy
 - optimizes multiclass classification model using macro strategy
 - reasons about when to use micro or macro optimization strategy
 - optimizes multiclass classification model for accuracy
 - optimizes multiclass classification model for precision
 - optimizes multiclass classification model for recall
 - optimizes multiclass classification model for F1
 - determines if a multiclass classification model generalizes well
 - visualizes a calibration plot of multiclass classification performance
 - interprets a calibration plot of multiclass classification performance
 - visualizes a ROC curve for multiclass classification performance
 - interpret ROC curve for multiclass classification
 - performs multiclass classification on image data
 - performs multiclass classification on tabular data
 - applies decision tree to multiclass classification problem
 - optimizes decision tree using gini
 - optimizes decision tree using gini alternative
 - applies random forest to multiclass classification problem
 - optimizes random forest using gini
 - optimizes random forest using gini alternative
 - optimizes random forest using bagging techniques
 - optimizes random forest using boosting techniques
 - stacks classifiers to perform multiclass classification
 - identifies a model as ensemble or not
 - applies softmax for multiclass classification
 - measures homonogeity of multiclass classification output
 - measures entrophy of multiclass classification output
 - visulalize multiclass classification features using a correlation matrix

clustering:
 - identifies problem as supervised or unsupervised
 - applies k-means to cluster tabular data into classes
 - interprets k-means clusters to gather insights on data
 - visualizes k-means output
 - determines if k-means model generalizes well
 - creates word embedding to cluster textual data
 - interprets word embedding to gather insights on data
 
deep learning:
 - differentiates between a neural network and a deep neural network
 - adjusts neural network width and depth using TensorFlow Playground 
 - adjusts neural network hyperparameters using TensorFlow Playground 
 - graphs training loss of a deep neural network
 - creates a deep neural network
 - creates a convolutional neural network
 - creates a recurrant neural network
 - uses long short term memory with an recurrant neural network
 - uses generalized recurrant unit with a recurrant neural network
 - feeds time series data to a recurrant neural network
 - visualizes output of a recurrant neural network
 - determines if a recurrant netural network is performing well
 - performs dropout to prevent deep neural network overfitting
 - creates a generative adversarial network
 - performs natural langauge processing
 - creates a model using reinforcement learning
 - creates a model using transfer learning
 - creates a recommendation system
 - sequence prediction
